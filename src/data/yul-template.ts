export enum YulSection {
  Constructor = "constructor",
  Dispatchers = "dispatchers",
  Functions = "functions",
  StorageLayout = "storage layout",
  ConstructorStorageLayout = "constructor storage layout",
  StorageAccess = "storage access",
  ConstructorStorageAccess = "constructor storage access",
}

const utilityFunctions: string[] = [
  ``,
  ``,
  `/* ---------- utility functions start ---------- */`,
  `function lte(a, b) -> r {`,
  `r := iszero(gt(a, b))`,
  `}`,
  `function gte(a, b) -> r {`,
  `r := iszero(lt(a, b))`,
  `}`,
  `function safeAdd(a, b) -> r {`,
  `r := add(a, b)`,
  `if or(lt(r, a), lt(r, b)) { revert(0, 0) }`,
  `}`,
  `function revert256(_v) {`,
  `mstore(0, _v)`,
  `revert (0, 0x20)`,
  `}`,
  `function extract_byte_array_length(data) -> length {`,
  `length := div(data, 2)`,
  `let outOfPlaceEncoding := and(data, 1)`,
  `if iszero(outOfPlaceEncoding) {`,
  `length := and(length, 0x7f)`,
  `}`,
  `}`,
];

const yulTemplate: string[] = [
  `code {`,
  `/* ---------- constructor ----------- */`,
  ``,
  ``,
  `/* -------- constructor storage layout ---------- */`,
  ``,
  ``,
  `/* -------- constructor storage access ---------- */`,
  ...utilityFunctions,
  ``,
  ``,
  `datacopy(0, dataoffset("runtime"), datasize("runtime"))`,
  `return(0, datasize("runtime"))`,
  `}`,
  ``,
  `object "runtime" {`,
  `code {`,
  `switch selector()`,
  `/* ---------- dispatchers ----------- */`,
  `default {`,
  `revert(0, 0)`,
  `}`,
  ``,
  ``,
  `/* ---------- functions ----------- */`,
  ``,
  ``,
  `/* ---------- calldata decoding functions ----------- */`,
  `function selector() -> s {`,
  `s := div(calldataload(0), 0x100000000000000000000000000000000000000000000000000000000)`,
  `}`,
  `function decodeAsAddress(offset) -> v {`,
  `v := decodeAsUint(offset)`,
  `if iszero(iszero(and(v, not(0xffffffffffffffffffffffffffffffffffffffff)))) {`,
  `revert(0, 0)`,
  `}`,
  `}`,
  `function decodeAsUint(offset) -> v {`,
  `let pos := add(4, mul(offset, 0x20))`,
  `if lt(calldatasize(), add(pos, 0x20)) {`,
  `revert(0, 0)`,
  `}`,
  `v := calldataload(pos)`,
  `}`,
  ``,
  ``,
  `/* ---------- calldata encoding functions ---------- */`,
  `function return256(v) {`,
  `mstore(0, v)`,
  `return(0, 0x20)`,
  `}`,
  `function returnString(v) {`,
  `let length := extract_byte_array_length(v)`,
  `mstore(0, 32)`,
  `mstore(32, length)`,
  `mstore(64, v)`,
  `return(0x00, 0x60)`,
  `}`,
  `function returnBoolean(v) {`,
  `switch v`,
  `case true {`,
  `return256(1)`,
  `}`,
  `case false {`,
  `return256(0)`,
  `}`,
  `default {`,
  `revert(0, 0)`,
  `}`,
  `}`,
  ``,
  ``,
  `/* -------- storage layout ---------- */`,
  ``,
  ``,
  `/* -------- storage access ---------- */`,
  ...utilityFunctions,
  `}`,
  `}`,
  `}`,
];

export default yulTemplate;
